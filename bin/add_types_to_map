#!/usr/bin/env ruby

require 'slop'
require 'json'

ARNs = {
  'us-gov-west-1' => 'aws-us-gov',
  'default' => 'aws'
}

HA_TYPES = {
  'ap-northeast-2' => 'c4.large',
  'ap-south-1' => 'c4.large',
  'default' => 'm3.medium'
}.freeze

EGW_TYPES = {
  'ap-northeast-2' => 'c4.large',
  'ap-south-1' => 'c4.large',
  'default' => 'm3.medium'
}.freeze

SWARM_TYPES = {
  'ap-northeast-2' => 'c4.large',
  'ap-south-1' => 'c4.large',
  'default' => 'm3.medium'
}.freeze

QUEEN_TYPES = {
  'sa-east-1' => 'm3.large',
  'default' => 'm4.large'
}.freeze

def read_json_file(filename)
  doc = File.read(filename)
  JSON.parse(doc)
rescue
    return {}
end

def write_output(data, filename)
  file = File.new(filename, File::CREAT|File::TRUNC|File::RDWR)
  file.write(JSON.pretty_generate(data))
  file.close
end

begin
  opts = Slop.parse do |o|
    o.string '--type'
    o.string '-i', '--in', 'input region map'
    o.string '-o', '--out', 'output file', default: '/dev/stdout'
    o.on '-h', '--help' do
      puts o
      exit
    end
  end

  unless(opts[:in])
    puts opts
    exit
  end

  region_map = read_json_file(opts[:in])

  region_map.each do |region, vars|
    # instance types
    if (opts[:type] == "HA")
      vars['HAInstanceType'] = HA_TYPES[region] || HA_TYPES['default']
    elsif (opts[:type] == "AS")
      vars['SwarmInstanceType'] = SWARM_TYPES[region] || SWARM_TYPES['default']
      vars['QueenInstanceType'] = QUEEN_TYPES[region] || QUEEN_TYPES['default']
    elsif (opts[:type] == "EGW")
      vars['EGWInstanceType'] = EGW_TYPES[region] || EGW_TYPES['default']
    end
    # ARNs
    vars['ARN'] = ARNs[region] || ARNs['default']
  end

  write_output(region_map, opts[:out]);

end
