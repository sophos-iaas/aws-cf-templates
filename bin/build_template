#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'slop'
require 'json'

def read_json_file(filename)
  doc = File.read(filename)
  JSON.parse(doc)
end

def write_output(data, filename)
  file = File.new(filename, File::CREAT|File::TRUNC|File::RDWR)
  file.write(JSON.pretty_generate(data))
  file.close
end

begin
  opts = Slop.parse do |o|
    o.string '-i', '--in', 'input template'
    o.string '-o', '--out', 'output file', default: '/dev/stdout'
    o.string '-mf', '--regionmap', 'region map file'
    o.on '-h', '--help' do
      puts o
      exit
    end
  end
  unless(opts[:in] && opts[:out] && opts[:regionmap])
    puts opts
    exit
  end
  unless(File.file?(opts[:in]))
    puts STDERR "Input file #{opts[:in]} does not exist!"
    exit 1
  end
  unless(File.file?(opts[:regionmap]))
    puts STDERR "Region Map input file #{opts[:regionmap]} does not exist!"
    exit 1
  end

  region_map = read_json_file(opts[:regionmap])
  template_doc = read_json_file(opts[:in])

  # Substitute region map in template
  template_doc['Mappings']['RegionMap'] = region_map

  # pretty write output file
  write_output(template_doc, opts[:out])

end
